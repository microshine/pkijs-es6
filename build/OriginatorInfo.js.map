{"version":3,"sources":["../src/OriginatorInfo.js"],"names":[],"mappings":"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","file":"OriginatorInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport CertificateSet from \"./CertificateSet\";\r\nimport RevocationInfoChoices from \"./RevocationInfoChoices\";\r\n//**************************************************************************************\r\nexport default class OriginatorInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OriginatorInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {CertificateSet}\r\n\t\t * @description certs\r\n\t\t */\r\n\t\tthis.certs = getParametersValue(parameters, \"certs\", OriginatorInfo.defaultValues(\"certs\"));\r\n\t\t/**\r\n\t\t * @type {RevocationInfoChoices}\r\n\t\t * @description crls\r\n\t\t */\r\n\t\tthis.crls = getParametersValue(parameters, \"crls\", OriginatorInfo.defaultValues(\"crls\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn new CertificateSet();\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn new RevocationInfoChoices();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certs\":\r\n\t\t\t\treturn (memberValue.certificates.length === 0);\r\n\t\t\tcase \"crls\":\r\n\t\t\t\treturn ((memberValue.crls.length === 0) && (memberValue.otherRevocationInfos.length === 0));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OriginatorInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//OriginatorInfo ::= SEQUENCE {\r\n\t\t//    certs [0] IMPLICIT CertificateSet OPTIONAL,\r\n\t\t//    crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [certs]\r\n\t\t * @property {string} [crls]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.certs || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: CertificateSet.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.crls || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RevocationInfoChoices.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOriginatorInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcerts: \"certs\",\r\n\t\t\t\t\tcrls: \"crls\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OriginatorInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tasn1.result.certs.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tasn1.result.certs.idBlock.tagNumber = 17; // SET\r\n\r\n\t\tthis.certs = new CertificateSet({ schema: asn1.result.certs });\r\n\r\n\t\tasn1.result.crls.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\tasn1.result.crls.idBlock.tagNumber = 17; // SET\r\n\r\n\t\tthis.crls = new RevocationInfoChoices({ schema: asn1.result.crls });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.certs.toSchema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.crls.toSchema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcerts: this.certs.toJSON(),\r\n\t\t\tcrls: this.crls.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}