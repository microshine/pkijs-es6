{"version":3,"sources":["../src/ResponseData.js"],"names":[],"mappings":"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","file":"ResponseData.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames\";\r\nimport SingleResponse from \"./SingleResponse\";\r\nimport Extension from \"./Extension\";\r\nimport Extensions from \"./Extensions\";\r\n//**************************************************************************************\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @description responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @description producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @description responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @description responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//ResponseData ::= SEQUENCE {\r\n\t\t//    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t\t//    responderID              ResponderID,\r\n\t\t//    producedAt               GeneralizedTime,\r\n\t\t//    responses                SEQUENCE OF SingleResponse,\r\n\t\t//    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ocsp.ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}