{"version":3,"sources":["../src/KeyAgreeRecipientIdentifier.js"],"names":[],"mappings":"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","file":"KeyAgreeRecipientIdentifier.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber\";\r\nimport RecipientKeyIdentifier from \"./RecipientKeyIdentifier\";\r\n//**************************************************************************************\r\nexport default class KeyAgreeRecipientIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for KeyAgreeRecipientIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", KeyAgreeRecipientIdentifier.defaultValues(\"variant\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @description values\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", KeyAgreeRecipientIdentifier.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === (-1));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//KeyAgreeRecipientIdentifier ::= CHOICE {\r\n\t\t//    issuerAndSerialNumber IssuerAndSerialNumber,\r\n\t\t//    rKeyId [0] IMPLICIT RecipientKeyIdentifier }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [issuerAndSerialNumber]\r\n\t\t * @property {string} [rKeyId]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tIssuerAndSerialNumber.schema(names.issuerAndSerialNumber || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RecipientKeyIdentifier.schema(names.rKeyId || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tKeyAgreeRecipientIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for KeyAgreeRecipientIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.variant = 2;\r\n\r\n\t\t\tasn1.result.blockName.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tasn1.result.blockName.idBlock.tagNumber = 16; // SEQUENCE\r\n\r\n\t\t\tthis.value = new RecipientKeyIdentifier({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.value.toSchema();\r\n\t\t\tcase 2:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.value.toSchema().valueBlock.value\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant === 1) || (this.variant === 2))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}