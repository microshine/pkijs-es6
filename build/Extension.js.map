{"version":3,"sources":["../src/Extension.js"],"names":[],"mappings":"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","file":"Extension.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport SubjectDirectoryAttributes from \"./SubjectDirectoryAttributes\";\r\nimport PrivateKeyUsagePeriod from \"./PrivateKeyUsagePeriod\";\r\nimport AltName from \"./AltName\";\r\nimport BasicConstraints from \"./BasicConstraints\";\r\nimport IssuingDistributionPoint from \"./IssuingDistributionPoint\";\r\nimport GeneralNames from \"./GeneralNames\";\r\nimport NameConstraints from \"./NameConstraints\";\r\nimport CRLDistributionPoints from \"./CRLDistributionPoints\";\r\nimport CertificatePolicies from \"./CertificatePolicies\";\r\nimport PolicyMappings from \"./PolicyMappings\";\r\nimport AuthorityKeyIdentifier from \"./AuthorityKeyIdentifier\";\r\nimport PolicyConstraints from \"./PolicyConstraints\";\r\nimport ExtKeyUsage from \"./ExtKeyUsage\";\r\nimport InfoAccess from \"./InfoAccess\";\r\n//**************************************************************************************\r\nexport default class Extension\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Extension class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description extnID\r\n\t\t */\r\n\t\tthis.extnID = getParametersValue(parameters, \"extnID\", Extension.defaultValues(\"extnID\"));\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description critical\r\n\t\t */\r\n\t\tthis.critical = getParametersValue(parameters, \"critical\", Extension.defaultValues(\"critical\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @description extnValue\r\n\t\t */\r\n\t\tif(\"extnValue\" in parameters)\r\n\t\t\tthis.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\r\n\t\telse\r\n\t\t\tthis.extnValue = Extension.defaultValues(\"extnValue\");\r\n\r\n\t\tif(\"parsedValue\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Object}\r\n\t\t\t * @description parsedValue\r\n\t\t\t */\r\n\t\t\tthis.parsedValue = getParametersValue(parameters, \"parsedValue\", Extension.defaultValues(\"parsedValue\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"extnID\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"critical\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extnValue\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"parsedValue\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Extension class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//Extension  ::=  SEQUENCE  {\r\n\t\t//    extnID      OBJECT IDENTIFIER,\r\n\t\t//    critical    BOOLEAN DEFAULT FALSE,\r\n\t\t//    extnValue   OCTET STRING\r\n\t\t//}\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [extnID]\r\n\t\t * @property {string} [critical]\r\n\t\t * @property {string} [extnValue]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.extnID || \"\") }),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.critical || \"\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.extnValue || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tlet asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tExtension.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\textnID: \"extnID\",\r\n\t\t\t\t\tcritical: \"critical\",\r\n\t\t\t\t\textnValue: \"extnValue\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EXTENSION\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.extnID = asn1.result.extnID.valueBlock.toString();\r\n\t\tif(\"critical\" in asn1.result)\r\n\t\t\tthis.critical = asn1.result.critical.valueBlock.value;\r\n\t\tthis.extnValue = asn1.result.extnValue;\r\n\r\n\t\t//region Get \"parsedValue\" for well-known extensions\r\n\t\tasn1 = asn1js.fromBER(this.extnValue.valueBlock.valueHex);\r\n\t\tif(asn1.offset === (-1))\r\n\t\t\treturn;\r\n\r\n\t\tswitch(this.extnID)\r\n\t\t{\r\n\t\t\tcase \"2.5.29.9\": // SubjectDirectoryAttributes\r\n\t\t\t\tthis.parsedValue = new SubjectDirectoryAttributes({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.14\": // SubjectKeyIdentifier\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple OCTETSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.15\": // KeyUsage\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple BITSTRING\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.16\": // PrivateKeyUsagePeriod\r\n\t\t\t\tthis.parsedValue = new PrivateKeyUsagePeriod({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.17\": // SubjectAltName\r\n\t\t\tcase \"2.5.29.18\": // IssuerAltName\r\n\t\t\t\tthis.parsedValue = new AltName({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.19\": // BasicConstraints\r\n\t\t\t\tthis.parsedValue = new BasicConstraints({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.20\": // CRLNumber\r\n\t\t\tcase \"2.5.29.27\": // BaseCRLNumber (delta CRL indicator)\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.21\": // CRLReason\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple ENUMERATED\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.24\": // InvalidityDate\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple GeneralizedTime\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.28\": // IssuingDistributionPoint\r\n\t\t\t\tthis.parsedValue = new IssuingDistributionPoint({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.29\": // CertificateIssuer\r\n\t\t\t\tthis.parsedValue = new GeneralNames({ schema: asn1.result }); // Should be just a simple\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.30\": // NameConstraints\r\n\t\t\t\tthis.parsedValue = new NameConstraints({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.31\": // CRLDistributionPoints\r\n\t\t\tcase \"2.5.29.46\": // FreshestCRL\r\n\t\t\t\tthis.parsedValue = new CRLDistributionPoints({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.32\": // CertificatePolicies\r\n\t\t\t\tthis.parsedValue = new CertificatePolicies({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.33\": // PolicyMappings\r\n\t\t\t\tthis.parsedValue = new PolicyMappings({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.35\": // AuthorityKeyIdentifier\r\n\t\t\t\tthis.parsedValue = new AuthorityKeyIdentifier({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.36\": // PolicyConstraints\r\n\t\t\t\tthis.parsedValue = new PolicyConstraints({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.37\": // ExtKeyUsage\r\n\t\t\t\tthis.parsedValue = new ExtKeyUsage({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"2.5.29.54\": // InhibitAnyPolicy\r\n\t\t\t\tthis.parsedValue = asn1.result; // Should be just a simple INTEGER\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.1\": // AuthorityInfoAccess\r\n\t\t\tcase \"1.3.6.1.5.5.7.1.11\": // SubjectInfoAccess\r\n\t\t\t\tthis.parsedValue = new InfoAccess({ schema: asn1.result });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.critical }));\r\n\r\n\t\toutputArray.push(this.extnValue);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {\r\n\t\t\textnID: this.extnID,\r\n\t\t\textnValue: this.extnValue.toJSON()\r\n\t\t};\r\n\r\n\t\tif(this.critical !== Extension.defaultValues(\"critical\"))\r\n\t\t\tobject.critical = this.critical;\r\n\r\n\t\tif(\"parsedValue\" in this)\r\n\t\t\tobject.parsedValue = this.parsedValue.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}