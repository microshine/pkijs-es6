{"version":3,"sources":["../src/RSASSAPSSParams.js"],"names":[],"mappings":"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","file":"RSASSAPSSParams.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier\";\r\n//**************************************************************************************\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSASSA-PSS-params  ::=  Sequence  {\r\n\t\t//    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t\t//    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t\t//    saltLength         [2] Integer DEFAULT 20,\r\n\t\t//    trailerField       [3] Integer DEFAULT 1  }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSA_PSS_params\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}