{"version":3,"sources":["../src/RSAPrivateKey.js"],"names":[],"mappings":";;;;;;;;AAAA;;IAAY,M;;AACZ;;AACA;;;;;;;;;;;;IAEqB,a;;;;;;;;AAQpB,0BACA;AAAA,MADY,UACZ,yDADyB,EACzB;;AAAA;;;;;;;AAMC,OAAK,OAAL,GAAe,iCAAmB,UAAnB,EAA+B,SAA/B,EAA0C,cAAc,aAAd,CAA4B,SAA5B,CAA1C,CAAf;;;;;AAKA,OAAK,OAAL,GAAe,iCAAmB,UAAnB,EAA+B,SAA/B,EAA0C,cAAc,aAAd,CAA4B,SAA5B,CAA1C,CAAf;;;;;AAKA,OAAK,cAAL,GAAsB,iCAAmB,UAAnB,EAA+B,gBAA/B,EAAiD,cAAc,aAAd,CAA4B,gBAA5B,CAAjD,CAAtB;;;;;AAKA,OAAK,eAAL,GAAuB,iCAAmB,UAAnB,EAA+B,iBAA/B,EAAkD,cAAc,aAAd,CAA4B,iBAA5B,CAAlD,CAAvB;;;;;AAKA,OAAK,MAAL,GAAc,iCAAmB,UAAnB,EAA+B,QAA/B,EAAyC,cAAc,aAAd,CAA4B,QAA5B,CAAzC,CAAd;;;;;AAKA,OAAK,MAAL,GAAc,iCAAmB,UAAnB,EAA+B,QAA/B,EAAyC,cAAc,aAAd,CAA4B,QAA5B,CAAzC,CAAd;;;;;AAKA,OAAK,SAAL,GAAiB,iCAAmB,UAAnB,EAA+B,WAA/B,EAA4C,cAAc,aAAd,CAA4B,WAA5B,CAA5C,CAAjB;;;;;AAKA,OAAK,SAAL,GAAiB,iCAAmB,UAAnB,EAA+B,WAA/B,EAA4C,cAAc,aAAd,CAA4B,WAA5B,CAA5C,CAAjB;;;;;AAKA,OAAK,WAAL,GAAmB,iCAAmB,UAAnB,EAA+B,aAA/B,EAA8C,cAAc,aAAd,CAA4B,aAA5B,CAA9C,CAAnB;;AAEA,MAAG,qBAAqB,UAAxB;;;;;AAKC,QAAK,eAAL,GAAuB,iCAAmB,UAAnB,EAA+B,iBAA/B,EAAkD,cAAc,aAAd,CAA4B,iBAA5B,CAAlD,CAAvB;;;;AAID,MAAG,YAAY,UAAf,EACC,KAAK,UAAL,CAAgB,WAAW,MAA3B;;;AAGD,MAAG,UAAU,UAAb,EACC,KAAK,QAAL,CAAc,WAAW,IAAzB;;AAED;;;;;;;;;;;;;;;;6BAuGU,M,EACX;;AAEC,OAAM,OAAO,OAAO,aAAP,CAAqB,MAArB,EACZ,MADY,EAEZ,cAAc,MAAd,CAAqB;AACpB,WAAO;AACN,cAAS,SADH;AAEN,cAAS,SAFH;AAGN,qBAAgB,gBAHV;AAIN,sBAAiB,iBAJX;AAKN,aAAQ,QALF;AAMN,aAAQ,QANF;AAON,gBAAW,WAPL;AAQN,gBAAW,WARL;AASN,kBAAa,aATP;AAUN,qBAAgB;AACf,aAAO;AACN,kBAAW;AADL;AADQ;AAVV;AADa,IAArB,CAFY,CAAb;;AAsBA,OAAG,KAAK,QAAL,KAAkB,KAArB,EACC,MAAM,IAAI,KAAJ,CAAU,uEAAV,CAAN;;;;AAID,QAAK,OAAL,GAAe,KAAK,MAAL,CAAY,OAAZ,CAAoB,UAApB,CAA+B,QAA9C;AACA,QAAK,OAAL,GAAe,KAAK,MAAL,CAAY,OAAZ,CAAoB,cAApB,CAAmC,GAAnC,CAAf;AACA,QAAK,cAAL,GAAsB,KAAK,MAAL,CAAY,cAAlC;AACA,QAAK,eAAL,GAAuB,KAAK,MAAL,CAAY,eAAZ,CAA4B,cAA5B,CAA2C,GAA3C,CAAvB;AACA,QAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,cAAnB,CAAkC,GAAlC,CAAd;AACA,QAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,cAAnB,CAAkC,GAAlC,CAAd;AACA,QAAK,SAAL,GAAiB,KAAK,MAAL,CAAY,SAAZ,CAAsB,cAAtB,CAAqC,GAArC,CAAjB;AACA,QAAK,SAAL,GAAiB,KAAK,MAAL,CAAY,SAAZ,CAAsB,cAAtB,CAAqC,GAArC,CAAjB;AACA,QAAK,WAAL,GAAmB,KAAK,MAAL,CAAY,WAAZ,CAAwB,cAAxB,CAAuC,GAAvC,CAAnB;;AAEA,OAAG,qBAAqB,KAAK,MAA7B,EACC,KAAK,eAAL,GAAuB,MAAM,IAAN,CAAW,KAAK,MAAL,CAAY,eAAvB,EAAwC;AAAA,WAAW,6BAAmB,EAAE,QAAQ,OAAV,EAAnB,CAAX;AAAA,IAAxC,CAAvB;;AAED;;;;;;;;;6BAOD;;AAEC,OAAM,cAAc,EAApB;;AAEA,eAAY,IAAZ,CAAiB,IAAI,OAAO,OAAX,CAAmB,EAAE,OAAO,KAAK,OAAd,EAAnB,CAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,OAAL,CAAa,YAAb,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,cAAtB;AACA,eAAY,IAAZ,CAAiB,KAAK,eAAL,CAAqB,YAArB,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,MAAL,CAAY,YAAZ,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,MAAL,CAAY,YAAZ,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,SAAL,CAAe,YAAf,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,SAAL,CAAe,YAAf,EAAjB;AACA,eAAY,IAAZ,CAAiB,KAAK,WAAL,CAAiB,YAAjB,EAAjB;;AAEA,OAAG,qBAAqB,IAAxB,EACA;AACC,gBAAY,IAAZ,CAAiB,IAAI,OAAO,QAAX,CAAoB;AACpC,YAAO,MAAM,IAAN,CAAW,KAAK,eAAhB,EAAiC;AAAA,aAAW,QAAQ,QAAR,EAAX;AAAA,MAAjC;AAD6B,KAApB,CAAjB;AAGA;;;;AAID,UAAQ,IAAI,OAAO,QAAX,CAAoB;AAC3B,WAAO;AADoB,IAApB,CAAR;;AAIA;;;;;;;;;2BAOD;AACC,OAAM,MAAM;AACX,OAAG,uBAAS,kCAAoB,KAAK,OAAL,CAAa,UAAb,CAAwB,QAA5C,CAAT,EAAgE,IAAhE,EAAsE,IAAtE,CADQ;AAEX,OAAG,uBAAS,kCAAoB,KAAK,cAAL,CAAoB,UAApB,CAA+B,QAAnD,CAAT,EAAuE,IAAvE,EAA6E,IAA7E,CAFQ;AAGX,OAAG,uBAAS,kCAAoB,KAAK,eAAL,CAAqB,UAArB,CAAgC,QAApD,CAAT,EAAwE,IAAxE,EAA8E,IAA9E,CAHQ;AAIX,OAAG,uBAAS,kCAAoB,KAAK,MAAL,CAAY,UAAZ,CAAuB,QAA3C,CAAT,EAA+D,IAA/D,EAAqE,IAArE,CAJQ;AAKX,OAAG,uBAAS,kCAAoB,KAAK,MAAL,CAAY,UAAZ,CAAuB,QAA3C,CAAT,EAA+D,IAA/D,EAAqE,IAArE,CALQ;AAMX,QAAI,uBAAS,kCAAoB,KAAK,SAAL,CAAe,UAAf,CAA0B,QAA9C,CAAT,EAAkE,IAAlE,EAAwE,IAAxE,CANO;AAOX,QAAI,uBAAS,kCAAoB,KAAK,SAAL,CAAe,UAAf,CAA0B,QAA9C,CAAT,EAAkE,IAAlE,EAAwE,IAAxE,CAPO;AAQX,QAAI,uBAAS,kCAAoB,KAAK,WAAL,CAAiB,UAAjB,CAA4B,QAAhD,CAAT,EAAoE,IAApE,EAA0E,IAA1E;AARO,IAAZ;;AAWA,OAAG,qBAAqB,IAAxB,EACC,IAAI,GAAJ,GAAU,MAAM,IAAN,CAAW,KAAK,eAAhB,EAAiC;AAAA,WAAW,QAAQ,MAAR,EAAX;AAAA,IAAjC,CAAV;;AAED,UAAO,GAAP;AACA;;;;;;;;;2BAMQ,I,EACT;AACC,OAAG,OAAO,IAAV,EACC,KAAK,OAAL,GAAe,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAf,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAO,IAAV,EACC,KAAK,cAAL,GAAsB,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAtB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAO,IAAV,EACC,KAAK,eAAL,GAAuB,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAvB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAO,IAAV,EACC,KAAK,MAAL,GAAc,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAd,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAO,IAAV,EACC,KAAK,MAAL,GAAc,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAd,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,QAAQ,IAAX,EACC,KAAK,SAAL,GAAiB,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAjB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,QAAQ,IAAX,EACC,KAAK,SAAL,GAAiB,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAjB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,QAAQ,IAAX,EACC,KAAK,WAAL,GAAmB,IAAI,OAAO,OAAX,CAAmB,EAAE,UAAU,kCAAoB,yBAAW,KAAK,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAnB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,SAAS,IAAZ,EACC,KAAK,eAAL,GAAuB,MAAM,IAAN,CAAW,KAAK,GAAhB,EAAqB;AAAA,WAAW,6BAAmB,EAAE,MAAM,OAAR,EAAnB,CAAX;AAAA,IAArB,CAAvB;AACD;;;;;gCAvPoB,U,EACrB;AACC,WAAO,UAAP;AAEC,SAAK,SAAL;AACC,YAAO,CAAP;AACD,SAAK,SAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,gBAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,iBAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,QAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,QAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,WAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,WAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,aAAL;AACC,YAAO,IAAI,OAAO,OAAX,EAAP;AACD,SAAK,iBAAL;AACC,YAAO,EAAP;AACD;AACC,WAAM,IAAI,KAAJ,mDAA0D,UAA1D,CAAN;AAvBF;AAyBA;;;;;;;;;;2BAQD;AAAA,OADc,UACd,yDAD2B,EAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BC,OAAM,QAAQ,iCAAmB,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,UAAQ,IAAI,OAAO,QAAX,CAAoB;AAC3B,UAAO,MAAM,SAAN,IAAmB,EADC;AAE3B,WAAO,CACN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,OAAN,IAAiB,EAA1B,EAAnB,CADM,EAEN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,OAAN,IAAiB,EAA1B,EAAnB,CAFM,EAGN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,cAAN,IAAwB,EAAjC,EAAnB,CAHM,EAIN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,eAAN,IAAyB,EAAlC,EAAnB,CAJM,EAKN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,MAAN,IAAgB,EAAzB,EAAnB,CALM,EAMN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,MAAN,IAAgB,EAAzB,EAAnB,CANM,EAON,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,SAAN,IAAmB,EAA5B,EAAnB,CAPM,EAQN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,SAAN,IAAmB,EAA5B,EAAnB,CARM,EASN,IAAI,OAAO,OAAX,CAAmB,EAAE,MAAO,MAAM,WAAN,IAAqB,EAA9B,EAAnB,CATM,EAUN,IAAI,OAAO,QAAX,CAAoB;AACnB,eAAU,IADS;AAEnB,YAAO,CACN,IAAI,OAAO,QAAX,CAAoB;AACnB,YAAO,MAAM,mBAAN,IAA6B,EADjB;AAEnB,aAAO,yBAAe,MAAf,CAAsB,MAAM,cAAN,IAAwB,EAA9C;AAFY,MAApB,CADM;AAFY,KAApB,CAVM;AAFoB,IAApB,CAAR;AAuBA;;;;;;;;kBA1KmB,a","file":"RSAPrivateKey.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64 } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo\";\r\n//**************************************************************************************\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @description otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSAPrivateKey ::= Sequence {\r\n\t\t//    version           Version,\r\n\t\t//    modulus           Integer,  -- n\r\n\t\t//    publicExponent    Integer,  -- e\r\n\t\t//    privateExponent   Integer,  -- d\r\n\t\t//    prime1            Integer,  -- p\r\n\t\t//    prime2            Integer,  -- q\r\n\t\t//    exponent1         Integer,  -- d mod (p-1)\r\n\t\t//    exponent2         Integer,  -- d mod (q-1)\r\n\t\t//    coefficient       Integer,  -- (inverse of q) mod p\r\n\t\t//    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t\t//}\r\n\t\t//\r\n\t\t//OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}