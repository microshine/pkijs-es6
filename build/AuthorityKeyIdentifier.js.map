{"version":3,"sources":["../src/AuthorityKeyIdentifier.js"],"names":[],"mappings":"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","file":"AuthorityKeyIdentifier.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName\";\r\n//**************************************************************************************\r\nexport default class AuthorityKeyIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for AuthorityKeyIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"keyIdentifier\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description keyIdentifier\r\n\t\t\t */\r\n\t\t\tthis.keyIdentifier = getParametersValue(parameters, \"keyIdentifier\", AuthorityKeyIdentifier.defaultValues(\"keyIdentifier\"));\r\n\r\n\t\tif(\"authorityCertIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @description authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertIssuer = getParametersValue(parameters, \"authorityCertIssuer\", AuthorityKeyIdentifier.defaultValues(\"authorityCertIssuer\"));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @description authorityCertIssuer\r\n\t\t\t */\r\n\t\t\tthis.authorityCertSerialNumber = getParametersValue(parameters, \"authorityCertSerialNumber\", AuthorityKeyIdentifier.defaultValues(\"authorityCertSerialNumber\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyIdentifier\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"authorityCertIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"authorityCertSerialNumber\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for AuthorityKeyIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// AuthorityKeyIdentifier OID ::= 2.5.29.35\r\n\t\t//\r\n\t\t//AuthorityKeyIdentifier ::= SEQUENCE {\r\n\t\t//    keyIdentifier             [0] KeyIdentifier           OPTIONAL,\r\n\t\t//    authorityCertIssuer       [1] GeneralNames            OPTIONAL,\r\n\t\t//    authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL  }\r\n\t\t//\r\n\t\t//KeyIdentifier ::= OCTET STRING\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyIdentifier]\r\n\t\t * @property {string} [authorityCertIssuer]\r\n\t\t * @property {string} [authorityCertSerialNumber]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.keyIdentifier || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.authorityCertIssuer || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.authorityCertSerialNumber || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAuthorityKeyIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyIdentifier: \"keyIdentifier\",\r\n\t\t\t\t\tauthorityCertIssuer: \"authorityCertIssuer\",\r\n\t\t\t\t\tauthorityCertSerialNumber: \"authorityCertSerialNumber\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for AuthorityKeyIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"keyIdentifier\" in asn1.result)\r\n\t\t{\r\n\t\t\tasn1.result.keyIdentifier.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tasn1.result.keyIdentifier.idBlock.tagNumber = 4; // OCTETSTRING\r\n\r\n\t\t\tthis.keyIdentifier = asn1.result.keyIdentifier;\r\n\t\t}\r\n\r\n\t\tif(\"authorityCertIssuer\" in asn1.result)\r\n\t\t\tthis.authorityCertIssuer = Array.from(asn1.result.authorityCertIssuer, element => new GeneralName({ schema: element }));\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in asn1.result)\r\n\t\t{\r\n\t\t\tasn1.result.authorityCertSerialNumber.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tasn1.result.authorityCertSerialNumber.idBlock.tagNumber = 2; // INTEGER\r\n\r\n\t\t\tthis.authorityCertSerialNumber = asn1.result.authorityCertSerialNumber;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t{\r\n\t\t\tconst value = this.keyIdentifier;\r\n\t\t\t\r\n\t\t\tvalue.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tvalue.idBlock.tagNumber = 0; // [0]\r\n\t\t\t\r\n\t\t\toutputArray.push(value);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Sequence({\r\n\t\t\t\t\tvalue: Array.from(this.authorityCertIssuer, element => element.toSchema())\r\n\t\t\t\t})]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t{\r\n\t\t\tconst value = this.authorityCertSerialNumber;\r\n\t\t\t\r\n\t\t\tvalue.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tvalue.idBlock.tagNumber = 2; // [2]\r\n\t\t\t\r\n\t\t\toutputArray.push(value);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"keyIdentifier\" in this)\r\n\t\t\tobject.keyIdentifier = this.keyIdentifier.toJSON();\r\n\r\n\t\tif(\"authorityCertIssuer\" in this)\r\n\t\t\tobject.authorityCertIssuer = Array.from(this.authorityCertIssuer, element => element.toJSON());\r\n\r\n\t\tif(\"authorityCertSerialNumber\" in this)\r\n\t\t\tobject.authorityCertSerialNumber = this.authorityCertSerialNumber.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}