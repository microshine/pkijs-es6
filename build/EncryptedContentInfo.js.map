{"version":3,"sources":["../src/EncryptedContentInfo.js"],"names":[],"mappings":"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","file":"EncryptedContentInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier\";\r\n//**************************************************************************************\r\nexport default class EncryptedContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for EncryptedContentInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description contentType\r\n\t\t */\r\n\t\tthis.contentType = getParametersValue(parameters, \"contentType\", EncryptedContentInfo.defaultValues(\"contentType\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description contentEncryptionAlgorithm\r\n\t\t */\r\n\t\tthis.contentEncryptionAlgorithm = getParametersValue(parameters, \"contentEncryptionAlgorithm\", EncryptedContentInfo.defaultValues(\"contentEncryptionAlgorithm\"));\r\n\r\n\t\tif(\"encryptedContent\" in parameters)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description encryptedContent (!!!) could be contructive or primitive value (!!!)\r\n\t\t\t */\r\n\t\t\tthis.encryptedContent = parameters.encryptedContent;\r\n\t\t\t\r\n\t\t\tif((this.encryptedContent.idBlock.tagClass === 1) &&\r\n\t\t\t\t(this.encryptedContent.idBlock.tagNumber === 4))\r\n\t\t\t{\r\n\t\t\t\t//region Divide OCTETSTRING value down to small pieces\r\n\t\t\t\tif(this.encryptedContent.idBlock.isConstructed === false)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst constrString = new asn1js.OctetString({\r\n\t\t\t\t\t\tidBlock: { isConstructed: true },\r\n\t\t\t\t\t\tisConstructed: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet offset = 0;\r\n\t\t\t\t\tlet length = this.encryptedContent.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile(length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst pieceView = new Uint8Array(this.encryptedContent.valueBlock.valueHex, offset, ((offset + 1024) > this.encryptedContent.valueBlock.valueHex.byteLength) ? (this.encryptedContent.valueBlock.valueHex.byteLength - offset) : 1024);\r\n\t\t\t\t\t\tconst _array = new ArrayBuffer(pieceView.length);\r\n\t\t\t\t\t\tconst _view = new Uint8Array(_array);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(let i = 0; i < _view.length; i++)\r\n\t\t\t\t\t\t\t_view[i] = pieceView[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconstrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlength -= pieceView.length;\r\n\t\t\t\t\t\toffset += pieceView.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.encryptedContent = constrString;\r\n\t\t\t\t}\r\n\t\t\t\t//endregion\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"contentType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"contentEncryptionAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"encryptedContent\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"contentType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"contentEncryptionAlgorithm\":\r\n\t\t\t\treturn ((memberValue.algorithmId === \"\") && ((\"algorithmParams\" in memberValue) === false));\r\n\t\t\tcase \"encryptedContent\":\r\n\t\t\t\treturn (memberValue.isEqual(EncryptedContentInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncryptedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//EncryptedContentInfo ::= SEQUENCE {\r\n\t\t//    contentType ContentType,\r\n\t\t//    contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\r\n\t\t//    encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\r\n\t\t//\r\n\t\t// Comment: Strange, but modern crypto engines create \"encryptedContent\" as \"[0] EXPLICIT EncryptedContent\"\r\n\t\t//\r\n\t\t//EncryptedContent ::= OCTET STRING\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [contentType]\r\n\t\t * @property {string} [contentEncryptionAlgorithm]\r\n\t\t * @property {string} [encryptedContent]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.contentType || \"\") }),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.contentEncryptionAlgorithm || {}),\r\n\t\t\t\t// The CHOICE we need because \"EncryptedContent\" could have either \"constructive\"\r\n\t\t\t\t// or \"primitive\" form of encoding and we need to handle both variants\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.encryptedContent || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\tvalue: new asn1js.OctetString()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\t\t\tname: (names.encryptedContent || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tEncryptedContentInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcontentType: \"contentType\",\r\n\t\t\t\t\tcontentEncryptionAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"contentEncryptionAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tencryptedContent: \"encryptedContent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EncryptedContentInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.contentType = asn1.result.contentType.valueBlock.toString();\r\n\t\tthis.contentEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.contentEncryptionAlgorithm });\r\n\r\n\t\tif(\"encryptedContent\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.encryptedContent = asn1.result.encryptedContent;\r\n\r\n\t\t\tthis.encryptedContent.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tthis.encryptedContent.idBlock.tagNumber = 4; // OCTETSTRING (!!!) The value still has instance of \"in_window.org.pkijs.asn1.ASN1_CONSTRUCTED / ASN1_PRIMITIVE\"\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst sequenceLengthBlock = {\r\n\t\t\tisIndefiniteForm: false\r\n\t\t};\r\n\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.contentType }));\r\n\t\toutputArray.push(this.contentEncryptionAlgorithm.toSchema());\r\n\r\n\t\tif(\"encryptedContent\" in this)\r\n\t\t{\r\n\t\t\tsequenceLengthBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\r\n\r\n\t\t\tconst encryptedValue = this.encryptedContent;\r\n\r\n\t\t\tencryptedValue.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\tencryptedValue.idBlock.tagNumber = 0; // [0]\r\n\r\n\t\t\tencryptedValue.lenBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\r\n\r\n\t\t\toutputArray.push(encryptedValue);\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tlenBlock: sequenceLengthBlock,\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tcontentType: this.contentType,\r\n\t\t\tcontentEncryptionAlgorithm: this.contentEncryptionAlgorithm.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"encryptedContent\" in this)\r\n\t\t\t_object.encryptedContent = this.encryptedContent.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}