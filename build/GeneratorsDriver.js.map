{"version":3,"sources":["../src/GeneratorsDriver.js"],"names":[],"mappings":";;;;;kBAgCwB,gB;;;;AA7BxB,IAAM,cAAc,SAAd,WAAc,YAAa;AAChC,KAAG,OAAO,SAAP,KAAqB,WAAxB,EACC,OAAO,KAAP;;AAED,QAAS,OAAO,UAAU,IAAjB,KAA0B,UAA3B,IAA2C,OAAO,UAAU,KAAjB,KAA2B,UAA9E;AACA,CALD;;AAOA,IAAM,sBAAsB,SAAtB,mBAAsB,YAAa;AACxC,KAAG,OAAO,SAAP,KAAqB,WAAxB,EACC,OAAO,KAAP;;AAED,KAAM,cAAc,UAAU,WAA9B;;AAEA,KAAG,CAAC,WAAJ,EACC,OAAO,KAAP;;AAED,KAAI,YAAY,IAAZ,KAAqB,mBAAtB,IAA+C,YAAY,WAAZ,KAA4B,mBAA9E,EACC,OAAO,IAAP;;AAED,QAAO,YAAY,SAAZ,CAAP;AACA,CAbD;;;;;;;;;AAsBe,SAAS,gBAAT,CAA0B,iBAA1B,EACf;;AAEC,KAAG,CAAC,YAAY,iBAAZ,CAAJ,EACA;AACC,MAAG,oBAAoB,iBAApB,CAAH,EACC,oBAAoB,mBAApB,CADD,KAGC,MAAM,IAAI,KAAJ,CAAU,gEAAV,CAAN;AACD;;;AAGD,QAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;;;;;AAMvC,MAAM,WAAW,SAAX,QAAW,QAAS;AACzB,OAAI,eAAJ;;AAEA,OACA;AACC,aAAS,kBAAkB,KAAlB,CAAwB,KAAxB,CAAT;AACA,IAHD,CAIA,OAAM,EAAN,EACA;AACC,WAAO,OAAO,EAAP,CAAP;AACA;;AAED,UAAO,SAAS,MAAT,CAAP;AACA,GAbD;;;;;;;AAoBA,MAAM,WAAW,SAAX,QAAW,SAAU;;;;;;AAM1B,OAAI,wBAAJ;;AAEA,OACA;AACC,sBAAkB,kBAAkB,IAAlB,CAAuB,MAAvB,CAAlB;AACA,IAHD,CAIA,OAAM,EAAN,EACA;AACC,WAAO,OAAO,EAAP,CAAP;AACA;;AAED,WAAO,IAAP;AAEC,SAAM,gBAAgB,KAAhB,YAAiC,OAAvC;AACC,YAAS,gBAAgB,IAAjB,GAAyB,QAAQ,gBAAgB,KAAxB,CAAzB,GAA0D,gBAAgB,KAAhB,CAAsB,IAAtB,CAA2B,QAA3B,EAAqC,QAArC,CAAlE;AACD,SAAK,oBAAoB,gBAAgB,KAApC,CAAL;AACA,SAAK,YAAY,gBAAgB,KAA5B,CAAL;AACC,YAAS,gBAAgB,IAAjB,GAAyB,iBAAiB,gBAAgB,KAAjC,EAAwC,IAAxC,CAA6C,wBAAgB;AAAE,cAAQ,YAAR;AAAwB,MAAvF,EAAyF,QAAzF,CAAzB,GAA8H,iBAAiB,gBAAgB,KAAjC,EAAwC,IAAxC,CAA6C,QAA7C,EAAuD,QAAvD,CAAtI;AACD,SAAM,OAAO,gBAAgB,KAAvB,KAAiC,UAAvC;AACC,qBAAgB,KAAhB,GAAwB,gBAAgB,KAAhB,EAAxB;AACD;AACC,YAAQ,gBAAgB,IAAjB,GAAyB,QAAQ,gBAAgB,KAAxB,CAAzB,GAA0D,SAAS,gBAAgB,KAAzB,CAAjE;AAVF;AAYA,GA7BD;;AA+BA;AACA,EA1DM,CAAP;AA2DA","file":"GeneratorsDriver.js","sourcesContent":["//**************************************************************************************\r\n//region Aux functions\r\n//**************************************************************************************\r\nconst isGenerator = generator => {\r\n\tif(typeof generator === \"undefined\")\r\n\t\treturn false;\r\n\r\n\treturn ((typeof generator.next === \"function\") && (typeof generator.throw === \"function\"))\r\n};\r\n//**************************************************************************************\r\nconst isGeneratorFunction = generator => {\r\n\tif(typeof generator === \"undefined\")\r\n\t\treturn false;\r\n\t\r\n\tconst constructor = generator.constructor;\r\n\r\n\tif(!constructor)\r\n\t\treturn false;\r\n\r\n\tif((constructor.name === \"GeneratorFunction\") || (constructor.displayName === \"GeneratorFunction\"))\r\n\t\treturn true;\r\n\r\n\treturn isGenerator(generator);\r\n};\r\n//**************************************************************************************\r\n//endregion\r\n//**************************************************************************************\r\n/**\r\n * Simple \"generator's driver\" inspired by \"https://github.com/tj/co\".\r\n * @param {Generator|GeneratorFunction} generatorInstance\r\n * @returns {Promise}\r\n */\r\nexport default function generatorsDriver(generatorInstance)\r\n{\r\n\t//region Check that we do have instance of \"Generator\" as input\r\n\tif(!isGenerator(generatorInstance))\r\n\t{\r\n\t\tif(isGeneratorFunction(generatorInstance))\r\n\t\t\tgeneratorInstance = generatorInstance();\r\n\t\telse\r\n\t\t\tthrow new Error(\"Only generator instance of generator function is a valid input\");\r\n\t}\r\n\t//endregion\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t/**\r\n\t\t * Driver function called on \"reject\" status in Promises\r\n\t\t * @param {*} error\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\tconst onReject = error => {\r\n\t\t\tlet result;\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tresult = generatorInstance.throw(error);\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\treturn reject(ex);\r\n\t\t\t}\r\n\r\n\t\t\treturn callback(result);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Main driver function\r\n\t\t * @param {*} [result]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\tconst callback = result => {\r\n\t\t\t/**\r\n\t\t\t * @type Object\r\n\t\t\t * @property {boolean} done\r\n\t\t\t * @property {*} value\r\n\t\t\t */\r\n\t\t\tlet generatorResult;\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tgeneratorResult = generatorInstance.next(result);\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\treturn reject(ex);\r\n\t\t\t}\r\n\r\n\t\t\tswitch(true)\r\n\t\t\t{\r\n\t\t\t\tcase (generatorResult.value instanceof Promise):\r\n\t\t\t\t\treturn ((generatorResult.done) ? resolve(generatorResult.value) : generatorResult.value.then(callback, onReject));\r\n\t\t\t\tcase isGeneratorFunction(generatorResult.value):\r\n\t\t\t\tcase isGenerator(generatorResult.value):\r\n\t\t\t\t\treturn ((generatorResult.done) ? generatorsDriver(generatorResult.value).then(driverResult => { resolve(driverResult); }, onReject) : generatorsDriver(generatorResult.value).then(callback, onReject));\r\n\t\t\t\tcase (typeof generatorResult.value === \"function\"):\r\n\t\t\t\t\tgeneratorResult.value = generatorResult.value();\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn (generatorResult.done) ? resolve(generatorResult.value) : callback(generatorResult.value);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcallback();\r\n\t});\r\n}\r\n//**************************************************************************************\r\n"]}