{"version":3,"sources":["../src/OCSPResponse.js"],"names":[],"mappings":"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","file":"OCSPResponse.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport ResponseBytes from \"./ResponseBytes\";\r\nimport BasicOCSPResponse from \"./BasicOCSPResponse\";\r\n//**************************************************************************************\r\nexport default class OCSPResponse\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OCSPResponse class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {Enumerated}\r\n\t\t * @description responseStatus\r\n\t\t */\r\n\t\tthis.responseStatus = getParametersValue(parameters, \"responseStatus\", OCSPResponse.defaultValues(\"responseStatus\"));\r\n\r\n\t\tif(\"responseBytes\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ResponseBytes}\r\n\t\t\t * @description responseBytes\r\n\t\t\t */\r\n\t\t\tthis.responseBytes = getParametersValue(parameters, \"responseBytes\", OCSPResponse.defaultValues(\"responseBytes\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"responseStatus\":\r\n\t\t\t\treturn new asn1js.Enumerated();\r\n\t\t\tcase \"responseBytes\":\r\n\t\t\t\treturn new ResponseBytes();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OCSPResponse class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"responseStatus\":\r\n\t\t\t\treturn (memberValue.isEqual(OCSPResponse.defaultValues(memberName)));\r\n\t\t\tcase \"responseBytes\":\r\n\t\t\t\treturn ((ResponseBytes.compareWithDefault(\"responseType\", memberValue.responseType)) &&\r\n\t\t\t\t\t\t(ResponseBytes.compareWithDefault(\"response\", memberValue.response)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OCSPResponse class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//OCSPResponse ::= SEQUENCE {\r\n\t\t//    responseStatus         OCSPResponseStatus,\r\n\t\t//    responseBytes          [0] EXPLICIT ResponseBytes OPTIONAL }\r\n\t\t//\r\n\t\t//OCSPResponseStatus ::= ENUMERATED {\r\n\t\t//    successful            (0),  -- Response has valid confirmations\r\n\t\t//    malformedRequest      (1),  -- Illegal confirmation request\r\n\t\t//    internalError         (2),  -- Internal error in issuer\r\n\t\t//    tryLater              (3),  -- Try again later\r\n\t\t//    -- (4) is not used\r\n\t\t//    sigRequired           (5),  -- Must sign the request\r\n\t\t//    unauthorized          (6)   -- Request unauthorized\r\n\t\t//}\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [responseStatus]\r\n\t\t * @property {string} [responseBytes]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"OCSPResponse\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Enumerated({ name: (names.responseStatus || \"responseStatus\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tResponseBytes.schema(names.responseBytes || {\r\n\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\tblockName: \"responseBytes\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOCSPResponse.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OCSP_RESPONSE\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.responseStatus = asn1.result.responseStatus;\r\n\t\tif(\"responseBytes\" in asn1.result)\r\n\t\t\tthis.responseBytes = new ResponseBytes({ schema: asn1.result.responseBytes });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(this.responseStatus);\r\n\t\tif(\"responseBytes\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.responseBytes.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tresponseStatus: this.responseStatus.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"responseBytes\" in this)\r\n\t\t\t_object.responseBytes = this.responseBytes.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Get OCSP response status for specific certificate\r\n\t * @param {Certificate} certificate\r\n\t * @param {Certificate} issuerCertificate\r\n\t * @returns {*}\r\n\t */\r\n\tgetCertificateStatus(certificate, issuerCertificate)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet basicResponse;\r\n\r\n\t\tconst result = {\r\n\t\t\tisForCertificate: false,\r\n\t\t\tstatus: 2 // 0 = good, 1 = revoked, 2 = unknown\r\n\t\t};\r\n\t\t//endregion\r\n\r\n\t\t//region Check that \"ResponseBytes\" contain \"OCSP_BASIC_RESPONSE\"\r\n\t\tif((\"responseBytes\" in this) === false)\r\n\t\t\treturn result;\r\n\r\n\t\tif(this.responseBytes.responseType !== \"1.3.6.1.5.5.7.48.1.1\") // id-pkix-ocsp-basic\r\n\t\t\treturn result;\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst asn1Basic = asn1js.fromBER(this.responseBytes.response.valueBlock.valueHex);\r\n\t\t\tbasicResponse = new BasicOCSPResponse({ schema: asn1Basic.result });\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\treturn basicResponse.getCertificateStatus(certificate, issuerCertificate);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Make a signature for current OCSP Response\r\n\t * @param {Object} privateKey Private key for \"subjectPublicKeyInfo\" structure\r\n\t * @param {string} [hashAlgorithm] Hashing algorithm. Default SHA-1\r\n\t * @returns {Promise}\r\n\t */\r\n\tsign(privateKey, hashAlgorithm)\r\n\t{\r\n\t\t//region Check that ResponseData has type BasicOCSPResponse and sign it\r\n\t\tif(this.responseBytes.responseType === \"1.3.6.1.5.5.7.48.1.1\")\r\n\t\t{\r\n\t\t\tconst asn1 = asn1js.fromBER(this.responseBytes.response.valueBlock.valueHex);\r\n\t\t\tconst basicResponse = new BasicOCSPResponse({ schema: asn1.result });\r\n\r\n\t\t\treturn basicResponse.sign(privateKey, hashAlgorithm);\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(`Unknown ResponseBytes type: ${this.responseBytes.responseType}`);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Verify current OCSP Response\r\n\t * @returns {Promise}\r\n\t */\r\n\tverify()\r\n\t{\r\n\t\t//region Check that ResponseBytes exists in the object\r\n\t\tif((\"responseBytes\" in this) === false)\r\n\t\t\treturn Promise.reject(\"Empty ResponseBytes field\");\r\n\t\t//endregion\r\n\r\n\t\t//region Check that ResponceData has type BasicOCSPResponse and verify it\r\n\t\tif(this.responseBytes.responseType === \"1.3.6.1.5.5.7.48.1.1\")\r\n\t\t{\r\n\t\t\tconst asn1 = asn1js.fromBER(this.responseBytes.response.valueBlock.valueHex);\r\n\t\t\tconst basicResponse = new BasicOCSPResponse({ schema: asn1.result });\r\n\r\n\t\t\treturn basicResponse.verify();\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(`Unknown ResponseBytes type: ${this.responseBytes.responseType}`);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}