{"version":3,"sources":["../src/RecipientInfo.js"],"names":[],"mappings":";;;;;;;;AAAA;;IAAY,M;;AACZ;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqB,a;;;;;;;;AAQpB,0BACA;AAAA,MADY,UACZ,yDADyB,EACzB;;AAAA;;;;;;;AAMC,OAAK,OAAL,GAAe,iCAAmB,UAAnB,EAA+B,SAA/B,EAA0C,cAAc,aAAd,CAA4B,SAA5B,CAA1C,CAAf;;AAEA,MAAG,WAAW,UAAd;;;;;AAKC,QAAK,KAAL,GAAa,iCAAmB,UAAnB,EAA+B,OAA/B,EAAwC,cAAc,aAAd,CAA4B,OAA5B,CAAxC,CAAb;;;;AAID,MAAG,YAAY,UAAf,EACC,KAAK,UAAL,CAAgB,WAAW,MAA3B;;AAED;;;;;;;;;;;;;;;;6BA2GU,M,EACX;;AAEC,OAAM,OAAO,OAAO,aAAP,CAAqB,MAArB,EACZ,MADY,EAEZ,cAAc,MAAd,CAAqB;AACpB,WAAO;AACN,gBAAW;AADL;AADa,IAArB,CAFY,CAAb;;AASA,OAAG,KAAK,QAAL,KAAkB,KAArB,EACC,MAAM,IAAI,KAAJ,CAAU,4EAAV,CAAN;;;;AAID,OAAG,KAAK,MAAL,CAAY,SAAZ,CAAsB,OAAtB,CAA8B,QAA9B,KAA2C,CAA9C,EACA;AACC,SAAK,OAAL,GAAe,CAAf;AACA,SAAK,KAAL,GAAa,oCAA0B,EAAE,QAAQ,KAAK,MAAL,CAAY,SAAtB,EAA1B,CAAb;AACA,IAJD,MAMA;;AAEC,QAAM,YAAY,KAAK,MAAL,CAAY,SAAZ,CAAsB,OAAtB,CAA8B,SAAhD;;AAEA,SAAK,MAAL,CAAY,SAAZ,CAAsB,OAAtB,CAA8B,QAA9B,GAAyC,CAAzC,C;AACA,SAAK,MAAL,CAAY,SAAZ,CAAsB,OAAtB,CAA8B,SAA9B,GAA0C,EAA1C,C;;;AAGA,YAAO,SAAP;AAEC,UAAK,CAAL;AACC,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,KAAL,GAAa,oCAA0B,EAAE,QAAQ,KAAK,MAAL,CAAY,SAAtB,EAA1B,CAAb;AACA;AACD,UAAK,CAAL;AACC,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,KAAL,GAAa,+BAAqB,EAAE,QAAQ,KAAK,MAAL,CAAY,SAAtB,EAArB,CAAb;AACA;AACD,UAAK,CAAL;AACC,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,KAAL,GAAa,oCAA0B,EAAE,QAAQ,KAAK,MAAL,CAAY,SAAtB,EAA1B,CAAb;AACA;AACD,UAAK,CAAL;AACC,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,KAAL,GAAa,iCAAuB,EAAE,QAAQ,KAAK,MAAL,CAAY,SAAtB,EAAvB,CAAb;AACA;AACD;AACC,YAAM,IAAI,KAAJ,CAAU,4CAAV,CAAN;AAnBF;AAqBA;;AAED;;;;;;;;;6BAOD;;AAEC,OAAM,UAAU,KAAK,KAAL,CAAW,QAAX,EAAhB;;AAEA,WAAO,KAAK,OAAZ;AAEC,SAAK,CAAL;AACC,YAAO,OAAP;AACD,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;;AAEC,aAAQ,OAAR,CAAgB,QAAhB,GAA2B,CAA3B,C;AACA,aAAQ,OAAR,CAAgB,SAAhB,GAA6B,KAAK,OAAL,GAAe,CAA5C;;;AAGA,YAAO,OAAP;AACD;AACC,YAAO,IAAI,OAAO,GAAX,EAAP;AAdF;;AAiBA;;;;;;;;;2BAOD;AACC,OAAM,UAAU;AACf,aAAS,KAAK;AADC,IAAhB;;AAIA,OAAI,KAAK,OAAL,IAAgB,CAAjB,IAAwB,KAAK,OAAL,IAAgB,CAA3C,EACC,QAAQ,KAAR,GAAgB,KAAK,KAAL,CAAW,MAAX,EAAhB;;AAED,UAAO,OAAP;AACA;;;;;gCAvMoB,U,EACrB;AACC,WAAO,UAAP;AAEC,SAAK,SAAL;AACC,YAAQ,CAAC,CAAT;AACD,SAAK,OAAL;AACC,YAAO,EAAP;AACD;AACC,WAAM,IAAI,KAAJ,mDAA0D,UAA1D,CAAN;AAPF;AASA;;;;;;;;;;qCAOyB,U,EAAY,W,EACtC;AACC,WAAO,UAAP;AAEC,SAAK,SAAL;AACC,YAAQ,gBAAgB,cAAc,aAAd,CAA4B,UAA5B,CAAxB;AACD,SAAK,OAAL;AACC,YAAQ,OAAO,IAAP,CAAY,WAAZ,EAAyB,MAAzB,KAAoC,CAA5C;AACD;AACC,WAAM,IAAI,KAAJ,mDAA0D,UAA1D,CAAN;AAPF;AASA;;;;;;;;;;2BAQD;AAAA,OADc,UACd,yDAD2B,EAC3B;;;;;;;;;;;;;;;;AAeC,OAAM,QAAQ,iCAAmB,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,UAAQ,IAAI,OAAO,MAAX,CAAkB;AACzB,WAAO,CACN,gCAAsB,MAAtB,CAA6B;AAC5B,YAAO;AACN,iBAAY,MAAM,SAAN,IAAmB;AADzB;AADqB,KAA7B,CADM,EAMN,IAAI,OAAO,WAAX,CAAuB;AACtB,WAAO,MAAM,SAAN,IAAmB,EADJ;AAEtB,cAAS;AACR,gBAAU,CADF,E;AAER,iBAAW,C;AAFH,MAFa;AAMtB,YAAO,gCAAsB,MAAtB,GAA+B,UAA/B,CAA0C;AAN3B,KAAvB,CANM,EAcN,IAAI,OAAO,WAAX,CAAuB;AACtB,WAAO,MAAM,SAAN,IAAmB,EADJ;AAEtB,cAAS;AACR,gBAAU,CADF,E;AAER,iBAAW,C;AAFH,MAFa;AAMtB,YAAO,2BAAiB,MAAjB,GAA0B,UAA1B,CAAqC;AANtB,KAAvB,CAdM,EAsBN,IAAI,OAAO,WAAX,CAAuB;AACtB,WAAO,MAAM,SAAN,IAAmB,EADJ;AAEtB,cAAS;AACR,gBAAU,CADF,E;AAER,iBAAW,C;AAFH,MAFa;AAMtB,YAAO,gCAAsB,MAAtB,GAA+B,UAA/B,CAA0C;AAN3B,KAAvB,CAtBM,EA8BN,IAAI,OAAO,WAAX,CAAuB;AACtB,WAAO,MAAM,SAAN,IAAmB,EADJ;AAEtB,cAAS;AACR,gBAAU,CADF,E;AAER,iBAAW,C;AAFH,MAFa;AAMtB,YAAO,6BAAmB,MAAnB,GAA4B,UAA5B,CAAuC;AANxB,KAAvB,CA9BM;AADkB,IAAlB,CAAR;AAyCA;;;;;;;;kBAlImB,a","file":"RecipientInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo\";\r\n//**************************************************************************************\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @description value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RecipientInfo ::= CHOICE {\r\n\t\t//    ktri KeyTransRecipientInfo,\r\n\t\t//    kari [1] KeyAgreeRecipientInfo,\r\n\t\t//    kekri [2] KEKRecipientInfo,\r\n\t\t//    pwri [3] PasswordRecipientinfo,\r\n\t\t//    ori [4] OtherRecipientInfo }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CMS_RECIPIENT_INFO\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst tagNumber = asn1.result.blockName.idBlock.tagNumber;\r\n\r\n\t\t\tasn1.result.blockName.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tasn1.result.blockName.idBlock.tagNumber = 16; // SEQUENCE\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}