{"version":3,"sources":["../src/EncapsulatedContentInfo.js"],"names":[],"mappings":"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","file":"EncapsulatedContentInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\n//**************************************************************************************\r\nexport default class EncapsulatedContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for EncapsulatedContentInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description eContentType\r\n\t\t */\r\n\t\tthis.eContentType = getParametersValue(parameters, \"eContentType\", EncapsulatedContentInfo.defaultValues(\"eContentType\"));\r\n\r\n\t\tif(\"eContent\" in parameters)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description eContent\r\n\t\t\t */\r\n\t\t\tthis.eContent = getParametersValue(parameters, \"eContent\", EncapsulatedContentInfo.defaultValues(\"eContent\"));\r\n\t\t\tif((this.eContent.idBlock.tagClass === 1) &&\r\n\t\t\t\t(this.eContent.idBlock.tagNumber === 4))\r\n\t\t\t{\r\n\t\t\t\t// #region Divide OCTETSTRING value down to small pieces\r\n\t\t\t\tif(this.eContent.idBlock.isConstructed === false)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst constrString = new asn1js.OctetString({\r\n\t\t\t\t\t\tidBlock: { isConstructed: true },\r\n\t\t\t\t\t\tisConstructed: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet offset = 0;\r\n\t\t\t\t\tlet length = this.eContent.valueBlock.valueHex.byteLength;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile(length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst pieceView = new Uint8Array(this.eContent.valueBlock.valueHex, offset, ((offset + 65536) > this.eContent.valueBlock.valueHex.byteLength) ? (this.eContent.valueBlock.valueHex.byteLength - offset) : 65536);\r\n\t\t\t\t\t\tconst _array = new ArrayBuffer(pieceView.length);\r\n\t\t\t\t\t\tconst _view = new Uint8Array(_array);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(let i = 0; i < _view.length; i++)\r\n\t\t\t\t\t\t\t_view[i] = pieceView[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconstrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlength -= pieceView.length;\r\n\t\t\t\t\t\toffset += pieceView.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.eContent = constrString;\r\n\t\t\t\t}\r\n\t\t\t\t// #endregion\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"eContentType\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"eContent\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncapsulatedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"eContentType\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tcase \"eContent\":\r\n\t\t\t\treturn (memberValue.isEqual(EncapsulatedContentInfo.defaultValues(\"eContent\")));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for EncapsulatedContentInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//EncapsulatedContentInfo ::= SEQUENCE {\r\n\t\t//    eContentType ContentType,\r\n\t\t//    eContent [0] EXPLICIT OCTET STRING OPTIONAL } // Changed it to ANY, as in PKCS#7\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.eContentType || \"\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Any({ name: (names.eContent || \"\") }) // In order to aling this with PKCS#7 and CMS as well\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tEncapsulatedContentInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\teContentType: \"eContentType\",\r\n\t\t\t\t\teContent: \"eContent\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for EncapsulatedContentInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.eContentType = asn1.result.eContentType.valueBlock.toString();\r\n\t\tif(\"eContent\" in asn1.result)\r\n\t\t\tthis.eContent = asn1.result.eContent;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.eContentType }));\r\n\t\tif(\"eContent\" in this)\r\n\t\t{\r\n\t\t\tif(EncapsulatedContentInfo.compareWithDefault(\"eContent\", this.eContent) === false)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.eContent]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\teContentType: this.eContentType\r\n\t\t};\r\n\r\n\t\tif(\"eContent\" in this)\r\n\t\t{\r\n\t\t\tif(EncapsulatedContentInfo.compareWithDefault(\"eContent\", this.eContent) === false)\r\n\t\t\t\t_object.eContent = this.eContent.toJSON();\r\n\t\t}\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}