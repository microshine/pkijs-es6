{"version":3,"sources":["../src/ECPublicKey.js"],"names":[],"mappings":"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","file":"ECPublicKey.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf, isEqualBuffer, toBase64, fromBase64, arrayBufferToString, stringToArrayBuffer } from \"pvutils\";\r\n//**************************************************************************************\r\nexport default class ECPublicKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCPublicKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description type\r\n\t\t */\r\n\t\tthis.x = getParametersValue(parameters, \"x\", ECPublicKey.defaultValues(\"x\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description values\r\n\t\t */\r\n\t\tthis.y = getParametersValue(parameters, \"y\", ECPublicKey.defaultValues(\"y\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description namedCurve\r\n\t\t */\r\n\t\tthis.namedCurve = getParametersValue(parameters, \"namedCurve\", ECPublicKey.defaultValues(\"namedCurve\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"x\":\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"x\":\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn (isEqualBuffer(memberValue, ECPublicKey.defaultValues(memberName)));\r\n\t\t\tcase \"namedCurve\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCPublicKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\treturn new asn1js.RawData();\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert ArrayBuffer into current class\r\n\t * @param {!ArrayBuffer} schema Special case: schema is an ArrayBuffer\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif((schema instanceof ArrayBuffer) === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\r\n\t\tconst view = new Uint8Array(schema);\r\n\t\tif(view[0] !== 0x04)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tlet coordinateLength;\r\n\r\n\t\tswitch(this.namedCurve)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.3.1.7\": // P-256\r\n\t\t\t\tcoordinateLength = 32;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.34\": // P-384\r\n\t\t\t\tcoordinateLength = 48;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.35\": // P-521\r\n\t\t\t\tcoordinateLength = 66;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Incorrect curve OID: ${this.namedCurve}`);\r\n\t\t}\r\n\r\n\t\tif(schema.byteLength !== (coordinateLength * 2 + 1))\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECPublicKey\");\r\n\t\t\r\n\t\tthis.x = schema.slice(1, coordinateLength + 1);\r\n\t\tthis.y = schema.slice(1 + coordinateLength, coordinateLength * 2 + 1);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\treturn new asn1js.RawData({ data: utilConcatBuf(\r\n\t\t\t(new Uint8Array([0x04])).buffer,\r\n\t\t\tthis.x,\r\n\t\t\tthis.y\r\n\t\t)\r\n\t\t});\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tlet crvName = \"\";\r\n\r\n\t\tswitch(this.namedCurve)\r\n\t\t{\r\n\t\t\tcase \"1.2.840.10045.3.1.7\": // P-256\r\n\t\t\t\tcrvName = \"P-256\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.34\": // P-384\r\n\t\t\t\tcrvName = \"P-384\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1.3.132.0.35\": // P-521\r\n\t\t\t\tcrvName = \"P-521\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcrv: crvName,\r\n\t\t\tx: toBase64(arrayBufferToString(this.x), true, true),\r\n\t\t\ty: toBase64(arrayBufferToString(this.y), true, true)\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tlet coodinateLength = 0;\r\n\r\n\t\tif(\"crv\" in json)\r\n\t\t{\r\n\t\t\tswitch(json.crv.toUpperCase())\r\n\t\t\t{\r\n\t\t\t\tcase \"P-256\":\r\n\t\t\t\t\tthis.namedCurve = \"1.2.840.10045.3.1.7\";\r\n\t\t\t\t\tcoodinateLength = 32;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-384\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.34\";\r\n\t\t\t\t\tcoodinateLength = 48;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"P-521\":\r\n\t\t\t\t\tthis.namedCurve = \"1.3.132.0.35\";\r\n\t\t\t\t\tcoodinateLength = 66;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"crv\\\"\");\r\n\r\n\t\tif(\"x\" in json)\r\n\t\t\tthis.x = stringToArrayBuffer(fromBase64(json.x, true)).slice(0, coodinateLength);\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"x\\\"\");\r\n\r\n\t\tif(\"y\" in json)\r\n\t\t\tthis.y = stringToArrayBuffer(fromBase64(json.y, true)).slice(0, coodinateLength);\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"y\\\"\");\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}