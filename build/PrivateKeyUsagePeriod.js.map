{"version":3,"sources":["../src/PrivateKeyUsagePeriod.js"],"names":[],"mappings":"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","file":"PrivateKeyUsagePeriod.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\n//**************************************************************************************\r\nexport default class PrivateKeyUsagePeriod\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PrivateKeyUsagePeriod class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"notBefore\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @description notBefore\r\n\t\t\t */\r\n\t\t\tthis.notBefore = getParametersValue(parameters, \"notBefore\", PrivateKeyUsagePeriod.defaultValues(\"notBefore\"));\r\n\r\n\t\tif(\"notAfter\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @description notAfter\r\n\t\t\t */\r\n\t\t\tthis.notAfter = getParametersValue(parameters, \"notAfter\", PrivateKeyUsagePeriod.defaultValues(\"notAfter\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"notBefore\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tcase \"notAfter\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// PrivateKeyUsagePeriod OID ::= 2.5.29.16\r\n\t\t//\r\n\t\t//PrivateKeyUsagePeriod ::= SEQUENCE {\r\n\t\t//    notBefore       [0]     GeneralizedTime OPTIONAL,\r\n\t\t//    notAfter        [1]     GeneralizedTime OPTIONAL }\r\n\t\t//-- either notBefore or notAfter MUST be present\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [notBefore]\r\n\t\t * @property {string} [notAfter]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notBefore || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notAfter || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPrivateKeyUsagePeriod.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tnotBefore: \"notBefore\",\r\n\t\t\t\t\tnotAfter: \"notAfter\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PrivateKeyUsagePeriod\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"notBefore\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotBefore = new asn1js.GeneralizedTime();\r\n\t\t\tlocalNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\r\n\t\t\tthis.notBefore = localNotBefore.toDate();\r\n\t\t}\r\n\r\n\t\tif(\"notAfter\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotAfter = new asn1js.GeneralizedTime({ valueHex: asn1.result.notAfter.valueBlock.valueHex });\r\n\t\t\tlocalNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\r\n\t\t\tthis.notAfter = localNotAfter.toDate();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"notBefore\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notBefore })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"notAfter\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notAfter })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"notBefore\" in this)\r\n\t\t\tobject.notBefore = this.notBefore;\r\n\r\n\t\tif(\"notAfter\" in this)\r\n\t\t\tobject.notAfter = this.notAfter;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}