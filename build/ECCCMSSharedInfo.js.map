{"version":3,"sources":["../src/ECCCMSSharedInfo.js"],"names":[],"mappings":"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","file":"ECCCMSSharedInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier\";\r\n//**************************************************************************************\r\nexport default class ECCCMSSharedInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCCMSSharedInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description keyInfo\r\n\t\t */\r\n\t\tthis.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\r\n\r\n\t\tif(\"entityUInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description entityUInfo\r\n\t\t\t */\r\n\t\t\tthis.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\r\n\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @description suppPubInfo\r\n\t\t */\r\n\t\tthis.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n\t\t//    keyInfo      AlgorithmIdentifier,\r\n\t\t//    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n\t\t//    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyInfo]\r\n\t\t * @property {string} [entityUInfo]\r\n\t\t * @property {string} [suppPubInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.entityUInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.suppPubInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECCCMSSharedInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityUInfo: \"entityUInfo\",\r\n\t\t\t\t\tsuppPubInfo: \"suppPubInfo\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECC_CMS_SharedInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\r\n\r\n\t\tif(\"entityUInfo\" in asn1.result)\r\n\t\t\tthis.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\r\n\r\n\t\tthis.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.keyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.entityUInfo]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t},\r\n\t\t\tvalue: [this.suppPubInfo]\r\n\t\t}));\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tkeyInfo: this.keyInfo.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t\t_object.entityUInfo = this.entityUInfo.toJSON();\r\n\r\n\t\t_object.suppPubInfo = this.suppPubInfo.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}